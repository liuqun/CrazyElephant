<Window x:Class="MyApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"        
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:MyApp"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}"
        Title="MainWindow" Height="600" Width="850">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <!--<Border BorderThickness="3" CornerRadius="6">-->
    <Border BorderBrush="Pink" BorderThickness="3" CornerRadius="6" Background="MistyRose">
        <Grid x:Name="Root" Margin="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border BorderBrush="White" BorderThickness="2" CornerRadius="6" Padding="4">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Effect>
                            <DropShadowEffect Color="LightGray" />
                        </StackPanel.Effect>
                        <TextBlock Text="欢迎光临" FontSize="60" FontFamily="LiShu" />
                        <!--绑定到MainWindowViewModel中的Restaurant属性类的Name属性上-->
                        <TextBlock Text="{Binding Restaurant.Name}" FontSize="60" FontFamily="LiShu" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="小店地址：" FontSize="24" FontFamily="LiShu" />
                        <!--绑定到MainWindowViewModel中的Restaurant属性类的Address属性上-->
                        <TextBlock Text="{Binding Restaurant.Address}" FontSize="24" FontFamily="LiShu" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="订餐电话：" FontSize="24" FontFamily="LiShu" />
                        <!--绑定到MainWindowViewModel中的Restaurant属性类的PhoneNumber属性上-->
                        <TextBlock Text="{Binding Restaurant.PhoneNumber}" FontSize="24" FontFamily="LiShu" />
                    </StackPanel>
                </StackPanel>
            </Border>
            <!--把DataGrid的ItemSource绑定到MainWindowViewModel中的DishMenu属性类上-->
            <DataGrid AutoGenerateColumns="False" GridLinesVisibility="None" CanUserDeleteRows="False"
                    CanUserAddRows="False" Margin="0,4" Grid.Row="1" FontSize="16" ItemsSource="{Binding DishMenu}">
                <!-- ColumnHeaderStyle 表头样式 -->
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <!-- RowStyle 行样式 -->
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="BorderThickness" Value="0,1,0,1"/>
                        <Setter Property="BorderBrush" Value="White" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="BorderBrush" Value="Pink"/>
                                <Setter Property="BorderThickness" Value="0,1,0,1"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <!-- CellStyle 单元格选中时的样式 -->
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell" >
                        <Setter Property="BorderThickness" Value="0,1,0,1"/>
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="BorderBrush" Value="White"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <!--<Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="BorderBrush" Value="White"/>
                                <Setter Property="BorderThickness" Value="0,1,0,1"/>
                            </Trigger>
                        </Style.Triggers>-->
                    </Style>
                </DataGrid.CellStyle>
                <!-- 数据列 -->
                <DataGrid.Columns>
                    <!--Check功能，为了达到点一次就能选取上需要使用CellTemplate来实现,数据绑定到MainWindowViewModel类的
                    DishMenu(List<DishMenuItemViewModel>类型的)属性类的Selected属性上-->
                    <DataGridTemplateColumn Header="" SortMemberPath="Selected" Width="30">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Path=Selected, UpdateSourceTrigger=PropertyChanged}"
                                          VerticalAlignment="Center" HorizontalAlignment="Center"
                                          />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="序号" Binding="{Binding RowSerialNum}" Width="48" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">

                                <Setter Property="Margin" Value="0,0,4,0"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="类别" Binding="{Binding Dish.Category}" Width="100" IsReadOnly="True" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="菜名" Binding="{Binding Dish.Name}" Width="120" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="售价" Binding="{Binding Dish.Price}" Width="80" IsReadOnly="True" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="推荐分数" Binding="{Binding Dish.Score}" Width="80" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="菜品简介" Binding="{Binding Dish.Description}" Width="*" IsReadOnly="True">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                                <Setter Property="TextAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn Header="数量" SortMemberPath="None" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Button HorizontalAlignment="Center" VerticalAlignment="Center"
                                            Content="+" Width="20" Height="20" FontSize="12" Padding="0,0,0,0">
                                        <Button.Command>
                                            <Binding Path="OrderAddCommand"/>
                                        </Button.Command>
                                    </Button>
                                    <TextBox Text="{Binding Path=NumOrdered}" Margin="10,0,10,0" HorizontalAlignment="Center" VerticalAlignment="Center" IsReadOnly="True">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction
                                                    Command="{Binding MyCallbackCommand}"
                                                    />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Button Command="{Binding Path=OrderDecCommand}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                            Content="-" Width="20" Height="20" FontSize="12" Padding="0,0,0,0"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="口味偏好备注" Binding="{Binding CustomerPreferedOpinions}" Width="*" IsReadOnly="False">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                                <Setter Property="TextAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="2" Margin="0,0,0,5">
                <TextBlock Text="总价：" VerticalAlignment="Center"/>
                <TextBlock TextAlignment="Right" Text="{Binding TotalCost}" MinWidth="50" VerticalAlignment="Center"/>
                <TextBlock Text="元" TextAlignment="Left" VerticalAlignment="Center" Width="30"/>
                <Button Content="提交订单" Height="30" Width="80" Command="{Binding PlaceOrderCommand}" Padding="0"/>
            </StackPanel>
        </Grid>
    </Border>
</Window>
